---
- hosts: dc1
  vars_files:
    - "vars/{{ ansible_os_family }}.yml"
    - "vars/Generic.yml"
  vars:
     tomcat_home: "{{ lookup('env','CATALINA_HOME') }}"
  become: yes
  tasks:

  - name: add apt repo for java
    apt_repository:
      repo: ppa:webupd8team/java
    when: ansible_os_family == "Debian"

  - name: update cache Debian
    apt:
      update_cache: yes
    when: ansible_os_family == "Debian"

  - name: update cache RedHat
    yum:
      name: '*'
    when: ansible_os_family == "RedHat"

  - name: install packages
    package: name={{item}} state=installed
    with_items:
         - "{{ java }}"
         - "{{ tomcat }}"
         - wget

  - name: clean artifact path
    file:
      state: absent
      path: "{{ CATALINA_WEBAPPS }}ROOT/"


  - name: download WAR file
    get_url:
      url: https://raw.githubusercontent.com/dimahavrylevych/mentorship/master/vagrant/sample.war
      dest: "{{ CATALINA_WEBAPPS }}ROOT.war"
      checksum: md5:3E11705A42AA79C06188B7009A12A938
      force: yes
      group: tomcat
      owner: root

  - name: config Tomcat
    copy:
      src: resources/server.xml
      dest: "{{ CATALINA_HOME }}server.xml"
      owner: "{{ tomcat }}"
      group: "{{ tomcat }}"
      mode: 0644
      backup: yes
    notify:
    - restart tomcat

  - meta: flush_handlers

  - name: init tomcat on boot
    service:
      name: "{{ tomcat }}"
      enabled: yes


  - name: add hostname
    replace:
      path: "{{ CATALINA_WEBAPPS }}ROOT/index.html"
      regexp: '<h1>Sample "Hello, World" Application from </h1>'
      replace: "<h1>Sample Hello, World Application from {{ inventory_hostname }}</h1>"
      backup: yes

  - uri:
      url: "http://{{ ansible_eth0.ipv4.address }}:8080/"
      return_content: yes
      register: webpage

  # - name: Fail if AWESOME is not in the page content
  #   fail:
  #     when: "'AWESOME' not in webpage.content"

  handlers:
   - name: restart tomcat
     service: name="{{ tomcat }}" state=restarted
     become: yes
     environment:
       JAVA_HOME: "{{ java_h }}"
